:mod:`pya.backend.Dummy`
========================

.. py:module:: pya.backend.Dummy


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   pya.backend.Dummy.DummyBackend
   pya.backend.Dummy.DummyStream



.. class:: DummyBackend(dummy_devices=None)


   Bases: :class:`pya.backend.base.BackendBase`

   Helper class that provides a standard way to create an ABC using
   inheritance.

   .. attribute:: dtype
      :annotation: = float32

      

   .. attribute:: range
      :annotation: = 1

      

   .. attribute:: bs
      :annotation: = 256

      

   .. method:: get_device_count(self)


   .. method:: get_device_info_by_index(self, idx)


   .. method:: get_default_input_device_info(self)


   .. method:: get_default_output_device_info(self)


   .. method:: open(self, *args, input_flag, output_flag, rate, frames_per_buffer, channels, stream_callback=None, **kwargs)


   .. method:: process_buffer(self, buffer)


   .. method:: terminate(self)



.. class:: DummyStream(input_flag, output_flag, frames_per_buffer, rate, channels, stream_callback)


   Bases: :class:`pya.backend.base.StreamBase`

   Helper class that provides a standard way to create an ABC using
   inheritance.

   .. method:: stop_stream(self)


   .. method:: close(self)


   .. method:: _generate_data(self)


   .. method:: _process_data(self)


   .. method:: start_stream(self)


   .. method:: is_active(self)



